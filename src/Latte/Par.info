-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Latte/Par.y
-----------------------------------------------------------------------------

state 151 contains 1 shift/reduce conflicts.

rule 45 is unused
rule 46 is unused
rule 47 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident ClBlock                    (6)
	TopDef -> 'class' Ident 'extends' Ident ClBlock    (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	ClBlock -> '{' ListInClDef '}'                     (14)
	InClDef -> Type Ident '(' ListArg ')' Block        (15)
	InClDef -> Type Ident ';'                          (16)
	ListInClDef ->                                     (17)
	ListInClDef -> InClDef ListInClDef                 (18)
	Block -> '{' ListStmt '}'                          (19)
	ListStmt ->                                        (20)
	ListStmt -> Stmt ListStmt                          (21)
	Stmt -> ';'                                        (22)
	Stmt -> Block                                      (23)
	Stmt -> Type ListItem ';'                          (24)
	Stmt -> Expr '=' Expr ';'                          (25)
	Stmt -> Ident '++' ';'                             (26)
	Stmt -> Ident '--' ';'                             (27)
	Stmt -> 'return' Expr ';'                          (28)
	Stmt -> 'return' ';'                               (29)
	Stmt -> 'if' '(' Expr ')' Stmt                     (30)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (31)
	Stmt -> 'while' '(' Expr ')' Stmt                  (32)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (33)
	Stmt -> Expr ';'                                   (34)
	Item -> Ident                                      (35)
	Item -> Ident '=' Expr                             (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	Type -> 'int'                                      (39)
	Type -> 'boolean'                                  (40)
	Type -> 'void'                                     (41)
	Type -> 'string'                                   (42)
	Type -> Type '[]'                                  (43)
	Type -> Ident                                      (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr7 -> Ident                                     (48)
	Expr7 -> Integer                                   (49)
	Expr7 -> String                                    (50)
	Expr7 -> 'true'                                    (51)
	Expr7 -> 'false'                                   (52)
	Expr7 -> '(' Expr ')' 'null'                       (53)
	Expr7 -> '(' Type '[]' ')' 'null'                  (54)
	Expr7 -> Ident '(' ListExpr ')'                    (55)
	Expr7 -> Expr7 '.' Ident '(' ListExpr ')'          (56)
	Expr7 -> Expr7 '[' Expr ']'                        (57)
	Expr7 -> Expr7 '.' Ident                           (58)
	Expr7 -> Expr8                                     (59)
	Expr6 -> 'new' Type                                (60)
	Expr6 -> 'new' Type '[' Expr ']'                   (61)
	Expr6 -> Expr7                                     (62)
	Expr5 -> '-' Expr6                                 (63)
	Expr5 -> '!' Expr6                                 (64)
	Expr5 -> Expr6                                     (65)
	Expr4 -> Expr4 MulOp Expr5                         (66)
	Expr4 -> Expr5                                     (67)
	Expr3 -> Expr3 AddOp Expr4                         (68)
	Expr3 -> Expr4                                     (69)
	Expr2 -> Expr2 RelOp Expr3                         (70)
	Expr2 -> Expr3                                     (71)
	Expr1 -> Expr2 '&&' Expr1                          (72)
	Expr1 -> Expr2                                     (73)
	Expr -> Expr1 '||' Expr                            (74)
	Expr -> Expr1                                      (75)
	Expr8 -> '(' Expr ')'                              (76)
	ListExpr ->                                        (77)
	ListExpr -> Expr                                   (78)
	ListExpr -> Expr ',' ListExpr                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	RelOp -> '<'                                       (85)
	RelOp -> '<='                                      (86)
	RelOp -> '>'                                       (87)
	RelOp -> '>='                                      (88)
	RelOp -> '=='                                      (89)
	RelOp -> '!='                                      (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'class'        { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'extends'      { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'null'         { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	ClBlock         rule  14
	InClDef         rules 15, 16
	ListInClDef     rules 17, 18
	Block           rule  19
	ListStmt        rules 20, 21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Item            rules 35, 36
	ListItem        rules 37, 38
	Type            rules 39, 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr7           rules 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
	Expr6           rules 60, 61, 62
	Expr5           rules 63, 64, 65
	Expr4           rules 66, 67
	Expr3           rules 68, 69
	Expr2           rules 70, 71
	Expr1           rules 72, 73
	Expr            rules 74, 75
	Expr8           rule  76
	ListExpr        rules 77, 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	RelOp           rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_Ident        reduce using rule 44


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40


State 9

	TopDef -> 'class' . Ident ClBlock                   (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident ClBlock    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39


State 11

	Type -> 'string' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        reduce using rule 42


State 12

	Type -> 'void' .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_Ident        reduce using rule 41


State 13

	TopDef -> 'class' Ident . ClBlock                   (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident ClBlock    (rule 7)

	'extends'      shift, and enter state 19
	'{'            shift, and enter state 20

	ClBlock        goto state 18

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_Ident        reduce using rule 43


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 26
	Type           goto state 27

State 18

	TopDef -> 'class' Ident ClBlock .                   (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 19

	TopDef -> 'class' Ident 'extends' . Ident ClBlock    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 20

	ClBlock -> '{' . ListInClDef '}'                    (rule 14)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	InClDef        goto state 21
	ListInClDef    goto state 22
	Type           goto state 23

State 21

	ListInClDef -> InClDef . ListInClDef                (rule 18)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	InClDef        goto state 21
	ListInClDef    goto state 34
	Type           goto state 23

State 22

	ClBlock -> '{' ListInClDef . '}'                    (rule 14)

	'}'            shift, and enter state 33


State 23

	InClDef -> Type . Ident '(' ListArg ')' Block       (rule 15)
	InClDef -> Type . Ident ';'                         (rule 16)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 32

State 24

	TopDef -> 'class' Ident 'extends' Ident . ClBlock    (rule 7)

	'{'            shift, and enter state 20

	ClBlock        goto state 31

State 25

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 30


State 26

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 29


State 27

	Arg -> Type . Ident                                 (rule 10)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 28

State 28

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 29

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 39

	Block          goto state 38

State 30

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 37
	Type           goto state 27

State 31

	TopDef -> 'class' Ident 'extends' Ident ClBlock .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 32

	InClDef -> Type Ident . '(' ListArg ')' Block       (rule 15)
	InClDef -> Type Ident . ';'                         (rule 16)

	'('            shift, and enter state 35
	';'            shift, and enter state 36


State 33

	ClBlock -> '{' ListInClDef '}' .                    (rule 14)

	'boolean'      reduce using rule 14
	'class'        reduce using rule 14
	'int'          reduce using rule 14
	'string'       reduce using rule 14
	'void'         reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 34

	ListInClDef -> InClDef ListInClDef .                (rule 18)

	'}'            reduce using rule 18


State 35

	InClDef -> Type Ident '(' . ListArg ')' Block       (rule 15)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 25
	ListArg        goto state 69
	Type           goto state 27

State 36

	InClDef -> Type Ident ';' .                         (rule 16)

	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16


State 37

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 38

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 39

	Block -> '{' . ListStmt '}'                         (rule 19)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	ListStmt       goto state 44
	Stmt           goto state 45
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 40

	Stmt -> Ident . '++' ';'                            (rule 26)
	Stmt -> Ident . '--' ';'                            (rule 27)
	Type -> Ident .                                     (rule 44)
	Expr7 -> Ident .                                    (rule 48)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 55)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 108
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 109
	'-'            reduce using rule 48
	'--'           shift, and enter state 110
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 44
	'||'           reduce using rule 48
	L_Ident        reduce using rule 44


State 41

	Expr7 -> Integer .                                  (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 42

	Expr7 -> String .                                   (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 43

	Stmt -> Block .                                     (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 44

	Block -> '{' ListStmt . '}'                         (rule 19)

	'}'            shift, and enter state 107


State 45

	ListStmt -> Stmt . ListStmt                         (rule 21)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	ListStmt       goto state 106
	Stmt           goto state 45
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 46

	Stmt -> Type . ListItem ';'                         (rule 24)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 105

State 47

	Expr7 -> Expr7 . '.' Ident '(' ListExpr ')'         (rule 56)
	Expr7 -> Expr7 . '[' Expr ']'                       (rule 57)
	Expr7 -> Expr7 . '.' Ident                          (rule 58)
	Expr6 -> Expr7 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'.'            shift, and enter state 101
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            shift, and enter state 102
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 48

	Expr5 -> Expr6 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 49

	Expr4 -> Expr5 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 50

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr4 .                                    (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 98
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 99
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            shift, and enter state 100
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 97

State 51

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr3 .                                    (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 95
	','            reduce using rule 71
	'-'            shift, and enter state 96
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 94

State 52

	Expr2 -> Expr2 . RelOp Expr3                        (rule 70)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 72)
	Expr1 -> Expr2 .                                    (rule 73)

	'!='           shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	'<'            shift, and enter state 89
	'<='           shift, and enter state 90
	'='            reduce using rule 73
	'=='           shift, and enter state 91
	'>'            shift, and enter state 92
	'>='           shift, and enter state 93
	']'            reduce using rule 73
	'||'           reduce using rule 73

	RelOp          goto state 86

State 53

	Expr -> Expr1 . '||' Expr                           (rule 74)
	Expr -> Expr1 .                                     (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75
	']'            reduce using rule 75
	'||'           shift, and enter state 85


State 54

	Stmt -> Expr . '=' Expr ';'                         (rule 25)
	Stmt -> Expr . ';'                                  (rule 34)

	';'            shift, and enter state 83
	'='            shift, and enter state 84


State 55

	Expr7 -> Expr8 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 56

	Expr5 -> '!' . Expr6                                (rule 64)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 82
	Expr8          goto state 55

State 57

	Expr7 -> '(' . Expr ')' 'null'                      (rule 53)
	Expr7 -> '(' . Type '[]' ')' 'null'                 (rule 54)
	Expr8 -> '(' . Expr ')'                             (rule 76)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 79
	Integer        goto state 41
	String         goto state 42
	Type           goto state 80
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 81
	Expr8          goto state 55

State 58

	Expr5 -> '-' . Expr6                                (rule 63)

	'('            shift, and enter state 57
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 78
	Expr8          goto state 55

State 59

	Stmt -> ';' .                                       (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 60

	Expr7 -> 'false' .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 61

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 33)

	'('            shift, and enter state 77


State 62

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 31)

	'('            shift, and enter state 76


State 63

	Expr6 -> 'new' . Type                               (rule 60)
	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 61)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 75

State 64

	Stmt -> 'return' . Expr ';'                         (rule 28)
	Stmt -> 'return' . ';'                              (rule 29)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 74
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 73
	Expr8          goto state 55

State 65

	Expr7 -> 'true' .                                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 66

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 32)

	'('            shift, and enter state 71


State 67

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 68

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 69

	InClDef -> Type Ident '(' ListArg . ')' Block       (rule 15)

	')'            shift, and enter state 70


State 70

	InClDef -> Type Ident '(' ListArg ')' . Block       (rule 15)

	'{'            shift, and enter state 39

	Block          goto state 133

State 71

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 32)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 132
	Expr8          goto state 55

State 72

	Expr7 -> Ident .                                    (rule 48)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 55)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 108
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 73

	Stmt -> 'return' Expr . ';'                         (rule 28)

	';'            shift, and enter state 131


State 74

	Stmt -> 'return' ';' .                              (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 75

	Type -> Type . '[]'                                 (rule 43)
	Expr6 -> 'new' Type .                               (rule 60)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 61)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            shift, and enter state 130
	'[]'           shift, and enter state 15
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 76

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 129
	Expr8          goto state 55

State 77

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 33)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 128

State 78

	Expr5 -> '-' Expr6 .                                (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 79

	Type -> Ident .                                     (rule 44)
	Expr7 -> Ident .                                    (rule 48)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 55)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 108
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 44
	'||'           reduce using rule 48


State 80

	Type -> Type . '[]'                                 (rule 43)
	Expr7 -> '(' Type . '[]' ')' 'null'                 (rule 54)

	'[]'           shift, and enter state 127


State 81

	Expr7 -> '(' Expr . ')' 'null'                      (rule 53)
	Expr8 -> '(' Expr . ')'                             (rule 76)

	')'            shift, and enter state 126


State 82

	Expr5 -> '!' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 83

	Stmt -> Expr ';' .                                  (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 84

	Stmt -> Expr '=' . Expr ';'                         (rule 25)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 125
	Expr8          goto state 55

State 85

	Expr -> Expr1 '||' . Expr                           (rule 74)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 124
	Expr8          goto state 55

State 86

	Expr2 -> Expr2 RelOp . Expr3                        (rule 70)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 123
	Expr8          goto state 55

State 87

	RelOp -> '!=' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 88

	Expr1 -> Expr2 '&&' . Expr1                         (rule 72)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 122
	Expr8          goto state 55

State 89

	RelOp -> '<' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 90

	RelOp -> '<=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 91

	RelOp -> '==' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 92

	RelOp -> '>' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 93

	RelOp -> '>=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 94

	Expr3 -> Expr3 AddOp . Expr4                        (rule 68)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 121
	Expr8          goto state 55

State 95

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 96

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 97

	Expr4 -> Expr4 MulOp . Expr5                        (rule 66)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 120
	Expr8          goto state 55

State 98

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 99

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 100

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 101

	Expr7 -> Expr7 '.' . Ident '(' ListExpr ')'         (rule 56)
	Expr7 -> Expr7 '.' . Ident                          (rule 58)

	L_Ident        shift, and enter state 2

	Ident          goto state 119

State 102

	Expr7 -> Expr7 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 118
	Expr8          goto state 55

State 103

	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 117


State 104

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 116
	';'            reduce using rule 37


State 105

	Stmt -> Type ListItem . ';'                         (rule 24)

	';'            shift, and enter state 115


State 106

	ListStmt -> Stmt ListStmt .                         (rule 21)

	'}'            reduce using rule 21


State 107

	Block -> '{' ListStmt '}' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'class'        reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 108

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 55)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 113
	Expr8          goto state 55
	ListExpr       goto state 114

State 109

	Stmt -> Ident '++' . ';'                            (rule 26)

	';'            shift, and enter state 112


State 110

	Stmt -> Ident '--' . ';'                            (rule 27)

	';'            shift, and enter state 111


State 111

	Stmt -> Ident '--' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 112

	Stmt -> Ident '++' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 113

	ListExpr -> Expr .                                  (rule 78)
	ListExpr -> Expr . ',' ListExpr                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 146


State 114

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 55)

	')'            shift, and enter state 145


State 115

	Stmt -> Type ListItem ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 116

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_Ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 144

State 117

	Item -> Ident '=' . Expr                            (rule 36)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 143
	Expr8          goto state 55

State 118

	Expr7 -> Expr7 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 142


State 119

	Expr7 -> Expr7 '.' Ident . '(' ListExpr ')'         (rule 56)
	Expr7 -> Expr7 '.' Ident .                          (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            shift, and enter state 141
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 120

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 121

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 98
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 99
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            shift, and enter state 100
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	MulOp          goto state 97

State 122

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72


State 123

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 95
	','            reduce using rule 70
	'-'            shift, and enter state 96
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	AddOp          goto state 94

State 124

	Expr -> Expr1 '||' Expr .                           (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	'='            reduce using rule 74
	']'            reduce using rule 74


State 125

	Stmt -> Expr '=' Expr . ';'                         (rule 25)

	';'            shift, and enter state 140


State 126

	Expr7 -> '(' Expr ')' . 'null'                      (rule 53)
	Expr8 -> '(' Expr ')' .                             (rule 76)

	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&&'           reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'.'            reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'='            reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'['            reduce using rule 76
	']'            reduce using rule 76
	'null'         shift, and enter state 139
	'||'           reduce using rule 76


State 127

	Type -> Type '[]' .                                 (rule 43)
	Expr7 -> '(' Type '[]' . ')' 'null'                 (rule 54)

	')'            shift, and enter state 138
	'[]'           reduce using rule 43


State 128

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 33)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 137

State 129

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 31)

	')'            shift, and enter state 136


State 130

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 61)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 135
	Expr8          goto state 55

State 131

	Stmt -> 'return' Expr ';' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 132

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 32)

	')'            shift, and enter state 134


State 133

	InClDef -> Type Ident '(' ListArg ')' Block .       (rule 15)

	'boolean'      reduce using rule 15
	'int'          reduce using rule 15
	'string'       reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15


State 134

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 32)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 153
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 135

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 61)

	']'            shift, and enter state 152


State 136

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 151
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 137

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 33)

	':'            shift, and enter state 150


State 138

	Expr7 -> '(' Type '[]' ')' . 'null'                 (rule 54)

	'null'         shift, and enter state 149


State 139

	Expr7 -> '(' Expr ')' 'null' .                      (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 140

	Stmt -> Expr '=' Expr ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 141

	Expr7 -> Expr7 '.' Ident '(' . ListExpr ')'         (rule 56)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 113
	Expr8          goto state 55
	ListExpr       goto state 148

State 142

	Expr7 -> Expr7 '[' Expr ']' .                       (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 143

	Item -> Ident '=' Expr .                            (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36


State 144

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 145

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 146

	ListExpr -> Expr ',' . ListExpr                     (rule 79)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	')'            reduce using rule 77
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 113
	Expr8          goto state 55
	ListExpr       goto state 147

State 147

	ListExpr -> Expr ',' ListExpr .                     (rule 79)

	')'            reduce using rule 79


State 148

	Expr7 -> Expr7 '.' Ident '(' ListExpr . ')'         (rule 56)

	')'            shift, and enter state 156


State 149

	Expr7 -> '(' Type '[]' ')' 'null' .                 (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 150

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 33)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	'false'        shift, and enter state 60
	'new'          shift, and enter state 63
	'true'         shift, and enter state 65
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 72
	Integer        goto state 41
	String         goto state 42
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 155
	Expr8          goto state 55

State 151

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 30)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 31)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         shift, and enter state 154
			(reduce using rule 30)

	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 152

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 153

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 154

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 31)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 158
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 155

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 33)

	')'            shift, and enter state 157


State 156

	Expr7 -> Expr7 '.' Ident '(' ListExpr ')' .         (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 157

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 33)

	'!'            shift, and enter state 56
	'('            shift, and enter state 57
	'-'            shift, and enter state 58
	';'            shift, and enter state 59
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 60
	'for'          shift, and enter state 61
	'if'           shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 63
	'return'       shift, and enter state 64
	'string'       shift, and enter state 11
	'true'         shift, and enter state 65
	'void'         shift, and enter state 12
	'while'        shift, and enter state 66
	'{'            shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 67
	L_quoted       shift, and enter state 68

	Ident          goto state 40
	Integer        goto state 41
	String         goto state 42
	Block          goto state 43
	Stmt           goto state 159
	Type           goto state 46
	Expr7          goto state 47
	Expr6          goto state 48
	Expr5          goto state 49
	Expr4          goto state 50
	Expr3          goto state 51
	Expr2          goto state 52
	Expr1          goto state 53
	Expr           goto state 54
	Expr8          goto state 55

State 158

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 159

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 46
Number of non-terminals: 32
Number of states: 160
